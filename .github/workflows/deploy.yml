name: Release and deploy
on:
  workflow_run:
    workflows: [Acceptance Tests]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

env:
  ENVIRONMENT: "light-theme.kitconcept.io"
  IMAGE_NAME: "ghcr.io/kitconcept/voltolighttheme-frontend"
  VOLTO_VERSION: "17.0.0"

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ steps.vars.outputs.ENVIRONMENT }}
      STACK_NAME: ${{ steps.vars.outputs.STACK_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Env Vars
        id: vars
        run: |
          ENVIRONMENT=${{ env.ENVIRONMENT }}
          echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_OUTPUT
          echo "STACK_NAME=${ENVIRONMENT//./-}" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs:
      - meta
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 3000:3000 ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: ./
          file: dockerfiles/Dockerfile
          build-args: |
            ADDON_NAME=@kitconcept/volto-light-theme
            ADDON_PATH=volto-light-theme
            VOLTO_VERSION=${{ env.VOLTO_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: $${{ steps.meta.outputs.labels }}
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - meta
      - release
    environment: ${{ needs.meta.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to cluster
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_private_key: ${{ secrets.DEPLOY_SSH }}
          stack_file: devops/stacks/${{ needs.meta.outputs.ENVIRONMENT }}.yml
          stack_name: ${{ needs.meta.outputs.STACK_NAME }}
          stack_param: ${{ github.ref_name }}
          env_file: ${{ secrets.ENV_FILE }}
          deploy_timeout: 480
