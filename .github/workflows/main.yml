name: Volto Light Theme CI

on:
  push:
  workflow_dispatch:

env:
  HOSTNAME: "light-theme.kitconcept.io"
  STACK_PREFIX: "lighttheme-stg"
  IMAGE_NAME_PREFIX: ghcr.io/kitconcept/voltolighttheme
  NODE_VERSION: "22.x"
  PYTHON_VERSION: "3.12"
  PLONE_VERSION: "6.1.0"

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      acceptance: ${{ steps.filter.outputs.acceptance }}
      backend: ${{ steps.filter.outputs.backend }}
      devops: ${{ steps.filter.outputs.devops }}
      docs: ${{ steps.filter.outputs.docs }}
      frontend: ${{ steps.filter.outputs.frontend }}
      BASE_TAG: ${{ steps.vars.outputs.BASE_TAG }}
      IMAGE_NAME_PREFIX: ${{ env.IMAGE_NAME_PREFIX }}
      NODE_VERSION: ${{ env.NODE_VERSION }}
      PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
      PLONE_VERSION: ${{ env.PLONE_VERSION }}
      VOLTO_VERSION: ${{ steps.vars.outputs.VOLTO_VERSION }}
      HOSTNAME: ${{ env.HOSTNAME }}
      ENVIRONMENT: ${{ steps.vars.outputs.ENVIRONMENT }}
      STACK_NAME: ${{ steps.vars.outputs.STACK_NAME }}
      STACK_PREFIX: ${{ env.STACK_PREFIX }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute several vars needed for the CI
        id: vars
        run: |
          echo "BASE_TAG=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          python3 -c 'import json; data = json.load(open("./frontend/mrs.developer.json")); print("VOLTO_VERSION=" + (data["core"].get("tag") or "latest"))' >> $GITHUB_OUTPUT
          echo "ENVIRONMENT=${{ env.HOSTNAME }}" >> $GITHUB_OUTPUT
          echo "STACK_NAME=${ENVIRONMENT//./-}" >> $GITHUB_OUTPUT

      - name: Test vars
        run: |
          echo "BASE_TAG=${{ steps.vars.outputs.BASE_TAG }}"
          echo 'VOLTO_VERSION=${{ steps.vars.outputs.VOLTO_VERSION }}'
          echo 'ENVIRONMENT=${{ steps.vars.outputs.ENVIRONMENT }}'
          echo 'STACK_NAME=${{ steps.vars.outputs.STACK_NAME }}'

      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            acceptance:
              - 'backend/**'
              - 'frontend/**'
            backend:
              - 'backend/**'
              - '.github/workflows/backend*'
            devops:
              - 'devops/**'
            docs:
              - '.readthedocs.yaml'
              - 'docs/**'
              - '.github/workflows/docs.yaml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/frontend*'

  docs:
    uses: ./.github/workflows/docs.yml
    needs:
        - config
    with:
        python-version: ${{ needs.config.outputs.PYTHON_VERSION }}
    if: ${{ needs.config.outputs.docs == 'true' }}

  backend-lint:
    uses: ./.github/workflows/backend-lint.yml
    needs:
        - config
    with:
        python-version: ${{ needs.config.outputs.PYTHON_VERSION }}
        plone-version: ${{ needs.config.outputs.PLONE_VERSION }}
    if: ${{ needs.config.outputs.backend == 'true' }}

  backend-test:
    uses: ./.github/workflows/backend-test.yml
    needs:
        - config
    strategy:
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10"]
        plone-version: ["6.1-latest", "6.0-latest"]
    with:
        python-version: ${{ matrix.python-version }}
        plone-version: ${{ matrix.plone-version }}
    if: ${{ needs.config.outputs.backend == 'true' }}

  backend-coverage:
    uses: ./.github/workflows/backend-coverage.yml
    needs:
        - config
    with:
        python-version: ${{ needs.config.outputs.PYTHON_VERSION }}
        plone-version: ${{ needs.config.outputs.PLONE_VERSION }}
    if: ${{ needs.config.outputs.backend == 'true' }}

  backend-build:
    if: ${{ needs.config.outputs.acceptance == 'true' && (always() && !contains(needs.*.result, 'failure'))}}
    uses: ./.github/workflows/backend-image-build.yml
    needs:
      - config
    with:
      base-tag: ${{ needs.config.outputs.BASE_TAG }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-name-suffix: backend
      plone-version: ${{ needs.config.outputs.PLONE_VERSION }}

  frontend-lint:
    uses: ./.github/workflows/frontend-lint.yml
    needs:
        - config
    with:
        node-version: ${{ needs.config.outputs.NODE_VERSION }}
    if: ${{ needs.config.outputs.frontend == 'true' }}
    permissions:
      contents: read
      packages: write

  frontend-unit:
    uses: ./.github/workflows/frontend-unit.yml
    needs:
        - config
    with:
        node-version: ${{ needs.config.outputs.NODE_VERSION }}
    if: ${{ needs.config.outputs.frontend == 'true' }}

  frontend-i18n:
    uses: ./.github/workflows/frontend-i18n.yml
    needs:
        - config
    with:
        node-version: ${{ needs.config.outputs.NODE_VERSION }}
    if: ${{ needs.config.outputs.frontend == 'true' }}

  frontend-build:
    if: ${{ needs.config.outputs.acceptance == 'true' && (always() && !contains(needs.*.result, 'failure'))}}
    uses: ./.github/workflows/frontend-image-build.yml
    needs:
      - config
    with:
      base-tag: ${{ needs.config.outputs.BASE_TAG }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-name-suffix: frontend
      node-version: ${{ needs.config.outputs.NODE_VERSION }}
      volto-version: ${{ needs.config.outputs.VOLTO_VERSION }}
    permissions:
      contents: read
      packages: write

  acceptance:
    if: ${{ needs.config.outputs.acceptance == 'true' && (always() && !contains(needs.*.result, 'failure'))}}
    uses: ./.github/workflows/frontend-acceptance.yml
    needs:
      - config
      - backend-build
      - frontend-build
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Main"
            short-name: main
          - name: "a11y"
            short-name: a11y
            a11y: true
    with:
      name: ${{ matrix.name }}
      short-name: ${{ matrix.short-name }}
      node-version: ${{ needs.config.outputs.NODE_VERSION }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-tag: ${{ needs.config.outputs.BASE_TAG }}
      a11y: ${{ matrix.a11y || false }}

  visual-acceptance:
    if: ${{ needs.config.outputs.acceptance == 'true' && (always() && !contains(needs.*.result, 'failure'))}}
    uses: ./.github/workflows/visual-acceptance.yml
    needs:
      - config
      - backend-build
      - frontend-build
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Homepage"
            short-name: homepage
          - name: "Content"
            short-name: content
          - name: "Blocks A"
            short-name: blocks-A
          - name: "Blocks B"
            short-name: blocks-B
          - name: "Blocks Grid"
            short-name: blocks-grid
          - name: "Blocks Listing"
            short-name: blocks-listingsandsearch
          - name: "Vertical Spacing"
            short-name: vertical-spacing
          - name: "Typography"
            short-name: typography
    with:
      name: ${{ matrix.name }}
      short-name: ${{ matrix.short-name }}
      node-version: ${{ needs.config.outputs.NODE_VERSION }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-tag: ${{ needs.config.outputs.BASE_TAG }}

  backend-release:
    uses: ./.github/workflows/backend-image-release.yml
    if: ${{ always() }}
    needs:
      - config
      - acceptance
      - backend-build
      - visual-acceptance
    with:
      base-tag: ${{ needs.config.outputs.BASE_TAG }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-name-suffix: backend
      push: ${{ (github.event_name != 'pull_request') && !contains(needs.*.result, 'failure') }}
      plone-version: ${{ needs.config.outputs.PLONE_VERSION }}

  frontend-release:
    uses: ./.github/workflows/frontend-image-release.yml
    needs:
      - config
      - frontend-build
      - acceptance
      - visual-acceptance
    with:
      base-tag: ${{ needs.config.outputs.BASE_TAG }}
      image-name-prefix: ${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
      image-name-suffix: frontend
      push: ${{ (github.event_name != 'pull_request') && !contains(needs.*.result, 'failure') }}
      volto-version: ${{ needs.config.outputs.VOLTO_VERSION }}
    permissions:
      contents: read
      packages: write

  deploy:
    uses: kitconcept/meta/.github/workflows/deploy.yml@main
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - config
      - backend-release
      - frontend-release
    with:
        tag: ${{ needs.config.outputs.BASE_TAG }}
        environment: ${{ needs.config.outputs.ENVIRONMENT }}
        stack-name: ${{ needs.config.outputs.STACK_NAME }}
        stack-file: devops/stacks/${{ needs.config.outputs.ENVIRONMENT }}.yml
        registry: "ghcr.io"
        username: ${{ github.actor }}
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}
      remote-host: ${{ secrets.DEPLOY_HOST }}
      remote-port: ${{ secrets.DEPLOY_PORT }}
      remote-user: ${{ secrets.DEPLOY_USER }}
      remote-private-key: ${{ secrets.DEPLOY_SSH }}
      env-file: |
        IMAGE_NAME_PREFIX=${{ needs.config.outputs.IMAGE_NAME_PREFIX }}
        IMAGE_TAG=${{ needs.config.outputs.BASE_TAG }}
        STACK_NAME=${{ needs.config.outputs.STACK_NAME }}
        STACK_PREFIX=${{ needs.config.outputs.STACK_PREFIX }}
        HOSTNAME=${{ needs.config.outputs.HOSTNAME }}
    permissions:
      contents: read
      packages: write
