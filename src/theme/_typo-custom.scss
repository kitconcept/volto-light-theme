body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
a,
li {
  font-family: $page-font;
  font-style: normal;
  @include body-text();
}

@mixin word-break {
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}

li::marker {
  line-height: 32px;
}

.content-area,
.breadcrumbs {
  p > a,
  li > a,
  .breadcrumb a {
    color: $blue-for-grey-contrast !important;
    text-decoration: underline;
  }
}

p,
ul,
ol {
  margin-bottom: $block-vertical-space;
  @include word-break();

  &:last-child {
    margin-bottom: 0;
  }
}

strong {
  @include add(weight, bold);
}

em,
em span span {
  font-style: italic;
}

#page-document {
  blockquote {
    padding: 18px 40px;
  }
}

h1.documentFirstHeading {
  border: none;
  @include page-title();
  @include vertical-space-h1();
  @include word-break();
  span {
    border: none;
    @include page-title();
  }

  &::before {
    display: none;
  }
}

// Block Title
.block h2.headline {
  @include block-title();
  @include vertical-space-block-title();
}

// Heading block
.heading-wrapper h2,
.block .heading-wrapper h2:last-child {
  // Needed to cancel the Semantic one
  @include block-title();
  @include vertical-space-heading();
}
.heading-wrapper h3 {
  padding-top: 3rem;
  padding-bottom: 1rem;
  font-size: 42px;
  font-weight: $light;
  line-height: 48px;
}

// Slate headings
h2 {
  @include text-heading-h2();
  @include vertical-space-h2();
  @include word-break();
  span {
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
  }
}
h3 {
  @include text-heading-h3();
  @include vertical-space-h3();
  @include word-break();
  span {
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
  }
}
h4 {
  @include text-heading-h4();
  @include vertical-space-h4();
  @include word-break();
  span {
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
  }
}

// Head-title
.head-title,
.head-title span {
  @include body-text-bold();
  @include word-break();
  padding-bottom: 10px;
  letter-spacing: 1px;
  text-transform: uppercase !important;
}

#page-add,
#page-edit {
  .head-title,
  .head-title span {
    user-select: none;
  }
}

@font-face {
  font-family: 'Inter';
  font-style: thin;
  font-weight: 100;
  src: local('Inter');
  src: url('./fonts/Inter-Thin.ttf');
  src: url('./fonts/Inter-Thin.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  // font-style: extra-light;
  font-weight: 200;
  src: local('Inter');
  src: url('./fonts/Inter-ExtraLight.ttf');
  src: url('./fonts/Inter-ExtraLight.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  font-style: light;
  font-weight: 300;
  src: local('Inter');
  src: url('./fonts/Inter-Light.ttf');
  src: url('./fonts/Inter-Light.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  font-style: normal; //regular
  font-weight: 400;
  src: local('Inter');
  src: url('./fonts/Inter-Regular.ttf');
  src: url('./fonts/Inter-Regular.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  font-style: medium;
  font-weight: 500;
  src: local('Inter');
  src: url('./fonts/Inter-Medium.ttf');
  src: url('./fonts/Inter-Medium.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  // font-style: semi-bold;
  font-weight: 600;
  src: local('Inter');
  src: url('./fonts/Inter-SemiBold.ttf');
  src: url('./fonts/Inter-SemiBold.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  font-style: bold;
  font-weight: 700;
  src: local('Inter');
  src: url('./fonts/Inter-Bold.ttf');
  src: url('./fonts/Inter-Bold.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  // font-style: extra-bold;
  font-weight: 800;
  src: local('Inter');
  src: url('./fonts/Inter-ExtraBold.ttf');
  src: url('./fonts/Inter-ExtraBold.ttf') format('truetype');
}
@font-face {
  font-family: 'Inter';
  // font-style: black;
  font-weight: 900;
  src: local('Inter');
  src: url('./fonts/Inter-Black.ttf');
  src: url('./fonts/Inter-Black.ttf') format('truetype');
}
